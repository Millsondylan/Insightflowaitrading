-- Audit & Dev-Tools Tables Migration
-- Generated by AI 2025-06-29
-- Dependencies: none

-- 1. Simple ping helper function used by monitoring endpoints
create or replace function public.ping() returns boolean
language sql as $$
  select true;
$$;

-- 2. Table for module-level error / latency logs (stream-append only)
create table if not exists public.module_error_logs (
  id uuid primary key default uuid_generate_v4(),
  module text not null,
  error_level text default 'error', -- info | warn | error
  message text not null,
  context jsonb,
  occurred_at timestamptz default now(),
  user_id uuid references public.profiles(id)
);

-- 3. Table for hidden AI reasoning logs (admin-only access)
create table if not exists public.ai_reasoning_logs (
  id uuid primary key default uuid_generate_v4(),
  user_id uuid references public.profiles(id),
  model text not null,
  prompt text not null,
  completion text not null,
  token_usage jsonb,
  created_at timestamptz default now()
);

-- 4. JSON schema registry – stores jsonschema docs for tables or payload identifiers
create table if not exists public.json_schema_registry (
  id serial primary key,
  schema_name text unique not null,
  related_table text,
  schema jsonb not null,
  version int default 1,
  created_at timestamptz default now()
);

-- 5. Developer mode flags per user (optional – local storage primarily)
create table if not exists public.developer_mode_flags (
  user_id uuid primary key references public.profiles(id),
  enabled boolean default false,
  last_toggled_at timestamptz default now()
);

-- 6. Extend user_notifications with preferences JSON column if missing
alter table if exists public.user_notifications
  add column if not exists preferences jsonb default '{}';

-- 7. Materialized view to expose last table sync times (referenced by API)
create materialized view if not exists public.table_sync_metadata as
select
  relname as table_name,
  pg_stat_all_tables.last_autovacuum as last_autovacuum,
  pg_stat_all_tables.last_analyze as last_analyze,
  greatest(pg_stat_all_tables.last_vacuum, pg_stat_all_tables.last_analyze) as last_maintained
from pg_stat_all_tables
join pg_class on pg_class.oid = pg_stat_all_tables.relid
where schemaname = 'public';

refresh materialized view public.table_sync_metadata;

-- Grant read access to anon & authenticated for monitoring use
grant select on public.table_sync_metadata to authenticated, anon; 